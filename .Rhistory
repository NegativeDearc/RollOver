shiny::runApp('D:/Articals/R/DieMaker')
source('C:/Users/sxchen/Desktop/DieMaker.R', echo=TRUE)
shiny::runApp('D:/Articals/R/DieMaker')
op
source('C:/Users/sxchen/Desktop/DieMaker.R', echo=TRUE)
op
list(op)
?diagram
install.packages('diagram')
library('diagram')
example(plotmat)
example(plotweb)
demo("flowchart")
demo("plotweb"
)
browseURL(paste(system.file(package="diagram"), "/demo", sep=""))
vignette("diagram")
edit(vignette("diagram"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
par(lwd = 1.5)
par(mar = c(0, 0, 2, 0))
emptyplot(main = "transistor Amplifier",
ylim = c(-0.1, 1), xlim = c(-0.1, 1.1),
asp = FALSE)
x1 <- 0; x2 <- 0.2; x3 <- 0.4; x4 <- 0.6; x5 <- 0.8; x6 <- 1;
y1 <- 0.05; y2 <- 0.4; y3 <- 0.5; y4 <- 0.6; y5 <- 0.95
x23 <- (x2 + x3)/2
x56 <- (x5 + x6)/2
lines(c(x2, x6, x6, x2, x2, x1, x1, x23, x3, x3),
c(y1, y1, y5, y5, y1, y1, y3, y3,  y4, y5))
lines(c(x3, x3),
c(y2, y1))
lines(c(x3,  x4,  x4),
c(y2,  y2,  y1))
lines(c(x3,  x5, x5),
c(y4,  y4, y1))
emptyplot(main = "en.Capacitator")
straightarrow(c(0.5, 0.9), c(0.5, 0.1),
arr.pos = 0.3, arr.length = 0.25, arr.type = "triangle")
en.Capacitator(c(0.5, 0.5), width = 0.075, length = 0.5, vert = TRUE)
text(0.4, 0.65, "i", font = 3, cex = 2)
straightarrow(c(0.8, 0.3), c(0.8, 0.77), arr.pos = 1,
arr.length = 0.25, arr.type = "triangle", lwd = 1)
text(0.925, 0.65, "v", font = 3, cex = 2)
text(0.15, 0.5, "C", font = 3, cex = 2)
box(col = "grey")
emptyplot(main = "en.Capacitator")
straightarrow(c(0.5, 0.9), c(0.5, 0.1),
arr.pos = 0.3, arr.length = 0.25, arr.type = "triangle")
en.Capacitator(c(0.5, 0.5), width = 0.075, length = 0.5, vert = TRUE)
text(0.4, 0.65, "i", font = 3, cex = 2)
straightarrow(c(0.8, 0.3), c(0.8, 0.77), arr.pos = 1,
arr.length = 0.25, arr.type = "triangle", lwd = 1)
text(0.925, 0.65, "v", font = 3, cex = 2)
text(0.15, 0.5, "C", font = 3, cex = 2)
box(col = "grey")
library("diagram", lib.loc="~/R/win-library/3.1")
emptyplot(main = "en.Capacitator")
straightarrow(c(0.5, 0.9), c(0.5, 0.1),
arr.pos = 0.3, arr.length = 0.25, arr.type = "triangle")
en.Capacitator(c(0.5, 0.5), width = 0.075, length = 0.5, vert = TRUE)
text(0.4, 0.65, "i", font = 3, cex = 2)
straightarrow(c(0.8, 0.3), c(0.8, 0.77), arr.pos = 1,
arr.length = 0.25, arr.type = "triangle", lwd = 1)
text(0.925, 0.65, "v", font = 3, cex = 2)
text(0.15, 0.5, "C", font = 3, cex = 2)
box(col = "grey")
example(plotmat)
example(plotweb)
demo("flowchart")
demo("plotmat")
demo("plotweb")
browseURL(paste(system.file(package="diagram"), "/demo", sep=""))
edit(vignette("diagram"))
library(highr)
hilight("x=1 # assignment")
txt = c("a <- 1 # something", "c(y=\"world\", z=\"hello\")", "b=function(x=5) {",
"for(i in 1:10) {\n  if (i < x) print(i) else break}}", "z@child # S4 slot",
"'special chars <>#$%&_{}'")
cat(hi_latex(txt), sep = "\n")
cat(hi_html(txt), sep = "\n")
detach("package:highr", unload=TRUE)
rgl.sphgrid()
library("sphereplot", lib.loc="~/R/win-library/3.1")
rgl.sphgrid()
print(sph2car(45,0,sqrt(2),deg=TRUE))
rgl.sphgrid()
rgl.sphsun()
rgl.sphgrid()
rgl.sphsun('get',radius=2,col='red')
open3d()
rgl.sphcirc(radius=0.5,col='blue')
rgl.sphMW()
rgl.sphpoints(40,50,0.5,deg=TRUE,col='red',cex=2)
rgl.sphtext(40,50,0.5,'HI!',deg=TRUE,col='red',cex=2)
rgl.sphpoints(pointsphere(100,c(0,90),c(0,45),c(0.25,0.8)),deg=TRUE)
par(mfrow = c(2, 2))
x <- y <- z <- seq(-1, 1, by = 0.1)
grid   <- mesh(x, y, z)
colvar <- with(grid, x*exp(-x^2 - y^2 - z^2))
# default is just the panels
slice3D  (x, y, z, colvar = colvar, theta = 60)
# contour slices
slicecont3D (x, y, z, ys = seq(-1, 1, by = 0.5), colvar = colvar,
theta = 60, border = "black")
slice3D  (x, y, z, xs = c(-1, -0.5, 0.5), ys = c(-1, 0, 1),
zs = c(-1, 0), colvar = colvar,
theta = 60, phi = 40)
library("httr", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
r <- GET('http://incoopernew/Pages/home.aspx')
r
r <- GET('http://cos.name/cn/')
r
library("httpuv", lib.loc="~/R/win-library/3.1")
library("DBI", lib.loc="~/R/win-library/3.1")
library("memoise", lib.loc="~/R/win-library/3.1")
library("htmltools", lib.loc="~/R/win-library/3.1")
doc <- tags$html(
tags$head(
tags$title('My first page')
),
tags$body(
h1('My first heading'),
p('My first paragraph, with some ',
strong('bold'),
' text.'),
div(id='myDiv', class='simpleDiv',
'Here is a div with some attributes.')
)
)
cat(as.character(doc))
library("Formula", lib.loc="~/R/win-library/3.1")
library("formatR", lib.loc="~/R/win-library/3.1")
library("proto", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
library("rvest", lib.loc="~/R/win-library/3.1")
library("rgl", lib.loc="~/R/win-library/3.1")
x <- c(1:10, 10:1)
y <- rev(c(rep(c(0,2), 5), rep(c(1.5,-0.5),5)))
plot(x, y, type="n")
polygon(x, y)
open3d()
shade3d( extrude3d(x, y), col = "red" )
if (requireNamespace("MASS")) {
Sigma <- matrix(c(10,3,0,3,2,0,0,0,1), 3,3)
Mean <- 1:3
x <- MASS::mvrnorm(1000, Mean, Sigma)
open3d()
plot3d(x, box=FALSE)
plot3d( ellipse3d(Sigma, centre=Mean), col="green", alpha=0.5, add = TRUE)
}
vertices <- c(
-1.0, -1.0, 0, 1.0,
1.0, -1.0, 0, 1.0,
1.0,  1.0, 0, 1.0,
-1.0,  1.0, 0, 1.0
)
indices <- c( 1, 2, 3, 4 )
open3d()
wire3d( qmesh3d(vertices,indices)
)
data(mtcars)
fit <- lm(mpg ~ disp + cyl , mtcars)
open3d()
plot3d(ellipse3d(fit, level = 0.90), col="blue", alpha=0.5, aspect=TRUE)
open3d()
spheres3d(rnorm(10), rnorm(10), rnorm(10), radius=runif(10), color=rainbow(10))
